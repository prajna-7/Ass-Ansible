- hosts: webservers
  tasks:
    - name: Copy Flask app to remote server
      copy:
        src: ./application2.py
        dest: /home/ubuntu/application2.py
    
    - name: Install Python 3 and pip
      become: true
      apt:
        name: 
          - python3
          - python3-pip
        update_cache: yes
    
    - name: Install Flask
      become: true
      pip:
        name: Flask
    
    - name: Start the Flask app in the background
      become: true
      shell: nohup python3 /home/ubuntu/application2.py > /dev/null 2>&1 &

- name: Install and configure HAProxy
  hosts: HAproxy
  become: true
  
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install HAProxy
      apt:
        name: haproxy
        state: latest

    - name: Configure HAProxy
      template:
        src: ./ansible/haproxy.cfg.j2
        dest: /etc/haproxy/haproxy.cfg
      notify: restart haproxy

    - name: Test deployed application
      uri:
        url: "http://localhost"
        return_content: yes
        status_code: 200
        validate_certs: no
      register: response
      retries: 3
      delay: 10

    - name: Verify application response
      assert:
        that:
          - "'Serving from' in response.content"
          - "'Serving from' in response.content"
          - "'Serving from' in response.content"
      when: response is defined and response.status == 200

  handlers:
    - name: restart haproxy
      service:
        name: haproxy
        state: restarted
